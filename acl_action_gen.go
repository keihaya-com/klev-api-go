// Code generated by 'gen-objects'; DO NOT EDIT
package klev

type Action struct{ string }

var (
	ActionList    = Action{"list"}
	ActionCreate  = Action{"create"}
	ActionGet     = Action{"get"}
	ActionUpdate  = Action{"update"}
	ActionDelete  = Action{"delete"}
	ActionPublish = Action{"publish"}
	ActionConsume = Action{"consume"}
	ActionCleanup = Action{"cleanup"}
	ActionRotate  = Action{"rotate"}
	ActionStatus  = Action{"status"}
)

var NilAction = Action{}

var AllActions = []Action{
	ActionList,
	ActionCreate,
	ActionGet,
	ActionUpdate,
	ActionDelete,
	ActionPublish,
	ActionConsume,
	ActionCleanup,
	ActionRotate,
	ActionStatus,
}

func ParseAction(s string) (Action, error) {
	switch s {
	case "list":
		return ActionList, nil
	case "create":
		return ActionCreate, nil
	case "get":
		return ActionGet, nil
	case "update":
		return ActionUpdate, nil
	case "delete":
		return ActionDelete, nil
	case "publish":
		return ActionPublish, nil
	case "consume":
		return ActionConsume, nil
	case "cleanup":
		return ActionCleanup, nil
	case "rotate":
		return ActionRotate, nil
	case "status":
		return ActionStatus, nil
	default:
		return NilAction, ErrACLActionInvalid(s, "list, create, get, update, delete, publish, consume, cleanup, rotate, status")
	}
}

func (e Action) String() string {
	return e.string
}

func (e Action) MarshalText() ([]byte, error) {
	return []byte(e.string), nil
}

func (e *Action) UnmarshalText(text []byte) error {
	v, err := ParseAction(string(text))
	if err != nil {
		return err
	}

	*e = v
	return nil
}
