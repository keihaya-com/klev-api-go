// Code generated by 'gen-objects'; DO NOT EDIT
package klev

type Subject struct{ string }

var (
	SubjectEgressWebhooks  = Subject{"egress_webhooks"}
	SubjectFilters         = Subject{"filters"}
	SubjectIngressWebhooks = Subject{"ingress_webhooks"}
	SubjectLogs            = Subject{"logs"}
	SubjectMessages        = Subject{"messages"}
	SubjectOffsets         = Subject{"offsets"}
	SubjectTokens          = Subject{"tokens"}
)

var NilSubject = Subject{}

var AllSubjects = []Subject{
	SubjectEgressWebhooks,
	SubjectFilters,
	SubjectIngressWebhooks,
	SubjectLogs,
	SubjectMessages,
	SubjectOffsets,
	SubjectTokens,
}

func ParseSubject(s string) (Subject, error) {
	switch s {
	case "egress_webhooks":
		return SubjectEgressWebhooks, nil
	case "filters":
		return SubjectFilters, nil
	case "ingress_webhooks":
		return SubjectIngressWebhooks, nil
	case "logs":
		return SubjectLogs, nil
	case "messages":
		return SubjectMessages, nil
	case "offsets":
		return SubjectOffsets, nil
	case "tokens":
		return SubjectTokens, nil
	default:
		return NilSubject, ErrACLSubjectInvalid(s, "egress_webhooks, filters, ingress_webhooks, logs, messages, offsets, tokens")
	}
}

func (e Subject) String() string {
	return e.string
}

func (e Subject) MarshalText() ([]byte, error) {
	return []byte(e.string), nil
}

func (e *Subject) UnmarshalText(text []byte) error {
	v, err := ParseSubject(string(text))
	if err != nil {
		return err
	}

	*e = v
	return nil
}
