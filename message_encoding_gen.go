// Code generated by 'gen-objects'; DO NOT EDIT
package klev

type MessageEncoding struct{ string }

var (
	MessageEncodingString = MessageEncoding{"string"}
	MessageEncodingBase64 = MessageEncoding{"base64"}
)

var NilMessageEncoding = MessageEncoding{}

var AllMessageEncodings = []MessageEncoding{
	MessageEncodingString,
	MessageEncodingBase64,
}

func ParseMessageEncoding(s string) (MessageEncoding, error) {
	switch s {
	case "string":
		return MessageEncodingString, nil
	case "base64":
		return MessageEncodingBase64, nil
	default:
		return NilMessageEncoding, ErrMessageEncodingInvalid(s, "string, base64")
	}
}

func (e MessageEncoding) String() string {
	return e.string
}

func (e MessageEncoding) MarshalText() ([]byte, error) {
	return []byte(e.string), nil
}

func (e *MessageEncoding) UnmarshalText(text []byte) error {
	v, err := ParseMessageEncoding(string(text))
	if err != nil {
		return err
	}

	*e = v
	return nil
}
