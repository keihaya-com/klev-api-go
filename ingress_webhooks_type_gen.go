// Code generated by 'gen-objects'; DO NOT EDIT
package klev

type IngressWebhookType struct{ string }

var (
	IngressWebhookTypeGitHub      = IngressWebhookType{"gitHub"}
	IngressWebhookTypeKlevMessage = IngressWebhookType{"klev-message"}
	IngressWebhookTypeKlevKey     = IngressWebhookType{"klev-key"}
	IngressWebhookTypeKlevValue   = IngressWebhookType{"klev-value"}
	IngressWebhookTypeSlack       = IngressWebhookType{"slack"}
	IngressWebhookTypeStripe      = IngressWebhookType{"stripe"}
)

var NilIngressWebhookType = IngressWebhookType{}

var AllIngressWebhookTypes = []IngressWebhookType{
	IngressWebhookTypeGitHub,
	IngressWebhookTypeKlevMessage,
	IngressWebhookTypeKlevKey,
	IngressWebhookTypeKlevValue,
	IngressWebhookTypeSlack,
	IngressWebhookTypeStripe,
}

func ParseIngressWebhookType(s string) (IngressWebhookType, error) {
	switch s {
	case "gitHub":
		return IngressWebhookTypeGitHub, nil
	case "klev-message":
		return IngressWebhookTypeKlevMessage, nil
	case "klev-key":
		return IngressWebhookTypeKlevKey, nil
	case "klev-value":
		return IngressWebhookTypeKlevValue, nil
	case "slack":
		return IngressWebhookTypeSlack, nil
	case "stripe":
		return IngressWebhookTypeStripe, nil
	default:
		return NilIngressWebhookType, ErrIngressWebhookTypeInvalid(s, "gitHub, klev-message, klev-key, klev-value, slack, stripe")
	}
}

func (e IngressWebhookType) String() string {
	return e.string
}

func (e IngressWebhookType) MarshalText() ([]byte, error) {
	return []byte(e.string), nil
}

func (e *IngressWebhookType) UnmarshalText(text []byte) error {
	v, err := ParseIngressWebhookType(string(text))
	if err != nil {
		return err
	}

	*e = v
	return nil
}
