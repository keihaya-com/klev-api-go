// Code generated by 'gen-errors'; DO NOT EDIT
package ingress_validate

import (
	"github.com/klev-dev/klev-api-go"

	"fmt"
)

func ErrKlevContentTypeJsonInvalid() error {
	return &klev.APIError{
		Code:    "klev-content-type-json-invalid",
		Message: "'Content-Type: application/json' header is required",
	}
}

func ErrKlevContentTypeOctetInvalid() error {
	return &klev.APIError{
		Code:    "klev-content-type-octet-invalid",
		Message: "'Content-Type: application/octet-stream' header is required",
	}
}

func ErrKlevNotSigned() error {
	return &klev.APIError{
		Code:    "klev-not-signed",
		Message: "'X-Klev-Signature' header is missing",
	}
}

func ErrKlevSignatureMismatch() error {
	return &klev.APIError{
		Code:    "klev-signature-mismatch",
		Message: "Message signature did not match the expected signature",
	}
}

func ErrKlevSignatureMissing(h string) error {
	return &klev.APIError{
		Code:    "klev-signature-missing",
		Message: fmt.Sprintf("'X-Klev-Signature' header is missing signature: %s", h),
	}
}

func ErrKlevSignatureTimeMissing(h string) error {
	return &klev.APIError{
		Code:    "klev-signature-time-missing",
		Message: fmt.Sprintf("'X-Klev-Signature' header is missing timestamp: %s", h),
	}
}

func ErrKlevTimestampExpired(ts string) error {
	return &klev.APIError{
		Code:    "klev-timestamp-expired",
		Message: fmt.Sprintf("'%s' is no longer valid, too old", ts),
	}
}

func ErrKlevTimestampInvalid(ts string) error {
	return &klev.APIError{
		Code:    "klev-timestamp-invalid",
		Message: fmt.Sprintf("'%s' is not a valid timestamp", ts),
	}
}
